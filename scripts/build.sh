#!/bin/bash
# Generated by Claude 3.5 👩‍💻

# Color codes for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check if Docker is installed
if ! command_exists docker; then
    echo -e "${RED}Error: Docker is not installed${NC}"
    echo "Please install Docker first: https://docs.docker.com/get-docker/"
    exit 1
fi

# Check if Docker daemon is running
if ! docker info >/dev/null 2>&1; then
    echo -e "${RED}Error: Docker daemon is not running${NC}"
    echo "Please start Docker daemon first"
    
    # Provide platform-specific instructions
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "On macOS, start Docker Desktop application"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "Run: sudo systemctl start docker"
    fi
    exit 1
fi

# Function to build Docker image
build_image() {
    local name=$1
    local dockerfile=$2
    
    echo -e "${GREEN}Building ${name}...${NC}"
    
    if ! docker build ./ -t "gwyneth-${name}" -f "${dockerfile}"; then
        echo -e "${RED}Failed to build ${name}${NC}"
        return 1
    fi
    
    echo -e "${GREEN}Successfully built ${name}${NC}"
    return 0
}

# Main build process
echo -e "${GREEN}Starting build process...${NC}"

# Check if Dockerfiles exist
if [ ! -f "./reth/Dockerfile" ]; then
    echo -e "${RED}Error: Reth Dockerfile not found at ./reth/Dockerfile${NC}"
    exit 1
fi

if [ ! -f "./rbuilder/Dockerfile" ]; then
    echo -e "${RED}Error: Rbuilder Dockerfile not found at ./rbuilder/Dockerfile${NC}"
    exit 1
fi

# Build images
build_image "reth" "./reth/Dockerfile" || exit 1
build_image "rbuilder" "./rbuilder/Dockerfile" || exit 1

echo -e "${GREEN}All builds completed successfully!${NC}"

# Show image sizes and creation times
echo -e "\n${GREEN}Build Summary:${NC}"
docker images --format "table {{.Repository}}\t{{.Size}}\t{{.CreatedAt}}" | grep "gwyneth-"