#!/bin/bash
# Generated by Claude 3.5 üë©‚Äçüíª

# Color codes for output
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Function to show usage
show_usage() {
    echo -e "Usage: $0 [-b|--branch <branch_name>] [-r|--remote <remote_name>]"
    echo -e "\nExample:"
    echo -e "  $0 -b develop -r fork"
    exit 1
}

# Parse command line arguments
BRANCH="main"      # Default branch name
REMOTE="personal"  # Default remote name

while [[ $# -gt 0 ]]; do
    case $1 in
        -b|--branch)
            BRANCH="$2"
            shift 2
            ;;
        -r|--remote)
            REMOTE="$2"
            shift 2
            ;;
        *)
            echo -e "${RED}Unknown option: $1${NC}"
            show_usage
            ;;
    esac
done

# Function to pull a submodule
pull_submodule() {
    local submodule_path=$1

    echo -e "${GREEN}Pulling ${submodule_path}...${NC}"
    
    # Enter the submodule directory
    cd "$submodule_path" || {
        echo -e "${RED}Failed to enter ${submodule_path}${NC}"
        return 1
    }

    # Check if the remote exists
    if ! git remote | grep -q "^${REMOTE}$"; then
        echo -e "${RED}Remote ${REMOTE} does not exist in ${submodule_path}${NC}"
        cd - > /dev/null
        return 1
    fi

    # Fetch from the remote
    echo "Fetching from ${REMOTE}..."
    git fetch "${REMOTE}" "${BRANCH}"

    # Pull from the remote
    echo "Pulling from ${REMOTE}/${BRANCH}..."
    if git pull "${REMOTE}" "${BRANCH}" --ff-only; then
        echo -e "${GREEN}Successfully pulled ${submodule_path}${NC}"
    else
        echo -e "${RED}Failed to pull ${submodule_path}${NC}"
    fi

    # Return to parent directory
    cd - > /dev/null
}

# First pull all submodules
pull_submodule "rbuilder"
pull_submodule "reth"
pull_submodule "revm"
pull_submodule "revm-inspectors"
pull_submodule "ethereum-package"

# Now pull the root repository (gwyneth-mono)
echo -e "${GREEN}Pulling root repository...${NC}"

# Check if the remote exists for root repo
if ! git remote | grep -q "^${REMOTE}$"; then
    echo -e "${RED}Remote ${REMOTE} does not exist in root repository${NC}"
    exit 1
fi

# Pull the root repository
echo "Pulling root repository from ${REMOTE}/${BRANCH}..."
if git pull "${REMOTE}" "${BRANCH}" --ff-only; then
    echo -e "${GREEN}Successfully pulled root repository${NC}"
else
    echo -e "${RED}Failed to pull root repository${NC}"
fi

echo -e "${GREEN}All repositories have been processed${NC}"